<?php

namespace App;

use Base\ClassName;

/**
 * @property integer $id
 * @property integer $organization_id
 * @property string $username
 * @property integer $is_active
 * @property Avatar $avatar
 * @property Post[] $posts
 * @property Organization $organization
 * @property UserRole[] $userRoles
 */
class UserModel extends ClassName
{
    /**
     * Indicates if the model should be timestamped.
     * @var bool
     */
    public $timestamps = false;

    /**
     * The storage format of the model's date columns.
     * @var string
     */
    protected $dateFormat = 'd/m/y';

    /**
     * @var array
     */
    protected $fillable = ['organization_id', 'username', 'is_active'];

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasOne
     */
    public function avatar(): \Illuminate\Database\Eloquent\Relations\HasOne
    {
        return $this->hasOne('App\Avatar', 'user_id');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function posts(): \Illuminate\Database\Eloquent\Relations\HasMany
    {
        return $this->hasMany('App\Post', 'author_id');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function organization(): \Illuminate\Database\Eloquent\Relations\BelongsTo
    {
        return $this->belongsTo('App\Organization');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function userRoles(): \Illuminate\Database\Eloquent\Relations\HasMany
    {
        return $this->hasMany('App\UserRole', 'user_id');
    }
}
